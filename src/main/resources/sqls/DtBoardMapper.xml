<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cheeus.board.mapper.DtBoardMapper">

	<resultMap id="DrinkTogetherResultMap" type="com.cheeus.board.dto.DtBoardDto">
		<id property="id" column="id"/>
		<result property="authorId" column="author_id"/>
		<result property="nickname" column="nickname"/>
		<result property="location" column="location"/>
		<result property="address" column="address"/>
		<result property="latitude" column="latitude"/>
		<result property="longitude" column="longitude"/>
		<result property="time" column="time"/>
		<result property="title" column="title"/>
		<result property="content" column="content"/>
		<result property="writeday" column="writeday"/>
		<result property="views" column="views"/>
		<result property="like" column="like"/>
	</resultMap>

	<resultMap id="DrinkTogetherLikesResultMap" type="com.cheeus.board.dto.DtLikesDto">
		<id property="postId" column="post_id"/>
		<result property="userId" column="user_id" />
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO drink_together (author_id, nickname, location, address, latitude, longitude, time, title, content, views, `like`)
		VALUES (#{authorId}, #{nickname}, #{location}, #{address}, #{latitude}, #{longitude}, #{time}, #{title}, #{content}, #{views}, #{like})
	</insert>

	<select id="findById" resultMap="DrinkTogetherResultMap" parameterType="int">
		SELECT * FROM drink_together WHERE id = #{id};
	</select>

	<select id="findAll" resultMap="DrinkTogetherResultMap">
		SELECT * FROM drink_together ORDER BY id DESC;
	</select>
	
	<select id="responseForInsert" resultType="java.lang.Integer">
		SELECT id FROM drink_together ORDER BY id DESC LIMIT 1
	</select>


	<update id="update">
		UPDATE drink_together
		SET author_id = #{authorId}, location = #{location}, address = #{address}, latitude = #{latitude}, longitude = #{longitude},
		time = #{time}, title = #{title}, content = #{content}, writeday = now(), views = #{views}
		WHERE id = #{id};
	</update>

	<!-- 좋아요 증가 -->
	<update id="increaseLike">
		UPDATE drink_together
		SET `like` = drink_together.like + 1
		WHERE id = #{id};
	</update>

	<!-- 좋아요 감소 -->
	<update id="decreaseLike">
		UPDATE drink_together
		SET `like` = drink_together.like - 1
		WHERE id = #{id};
	</update>

	<delete id="delete" parameterType="int">
		DELETE FROM drink_together WHERE id = #{id};
	</delete>

	<!-- 좋아요 관련 메서드 -->
	<insert id="addLike">
		INSERT INTO drink_together_likes (post_id, user_id)
		VALUES (#{event_id}, #{user_id});
	</insert>

	<delete id="removeLike">
		DELETE FROM drink_together_likes
		WHERE post_id = #{event_id} AND user_id = #{user_id}
	</delete>

	<select id="isLikedByUser" resultType="boolean">
		SELECT COUNT(*) > 0
		FROM drink_together_likes
		WHERE post_id = #{event_id} AND user_id = #{user_id}
	</select>

	<!-- 현재 게시물의 좋아요 수 반환 -->
	<select id="getLikeCount" resultType="int">
		SELECT `like`
		FROM drink_together
		WHERE id = #{event_id}
	</select>

	<!-- drink_together 테이블의 like 컬럼 업데이트 -->
	<update id="updateLikeCount">
		UPDATE drink_together
		SET `like` = (SELECT COALESCE(COUNT(*), 0) FROM drink_together_likes WHERE post_id = #{event_id})
		WHERE id = #{event_id}
	</update>

</mapper>
